name: Docker Publish (GHCR)

on:
  push:
    branches: [main]
    tags: ["v*.*.*"]
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - "Dockerfile"
      - "config/**"
      - ".github/workflows/docker-publish.yml"

permissions:
  contents: read
  packages: write

env:
  OWNER_LC: ${{ github.repository_owner && toLower(github.repository_owner) }}
  IMAGE_NAME: ghcr.io/${{ github.repository_owner && toLower(github.repository_owner) }}/ip-pool-operator

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Go build (sanity)
        run: go build ./...

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR (owner)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.OWNER_LC }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha
            type=ref,event=tag
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.title=ip-pool-operator
            org.opencontainers.image.description=Kubernetes operator that creates NetworkPolicies from remote IP/CIDR lists
            org.opencontainers.image.licenses=Apache-2.0

      - name: Build & push (first push, no cache-from)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max
